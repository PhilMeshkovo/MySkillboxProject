Index: src/main/java/main/DefaultController.java
===================================================================
--- src/main/java/main/DefaultController.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/DefaultController.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
@@ -1,21 +0,0 @@
-package main;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RestController;
-
-@RestController
-public class DefaultController {
-
-  @RequestMapping("/")
-  public String index() throws IOException {
-    FileInputStream inFile = new FileInputStream(
-        "src/main/resources/templates/index.html");
-    byte[] str = new byte[inFile.available()];
-    inFile.read(str);
-    String text = new String(str);
-    return text;
-  }
-}
-
Index: src/main/java/main/ApiPostController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.main;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\npublic class ApiPostController {\r\n\r\n}\r\n
===================================================================
--- src/main/java/main/ApiPostController.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/controller/ApiPostController.java	(date 1587736823750)
@@ -1,4 +1,4 @@
-package main.java.main;
+package main.controller;
 
 import org.springframework.web.bind.annotation.RestController;
 
Index: src/main/java/main/model/enums/ModerationStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/model/enums/ModerationStatus.java	(date 1587736823853)
+++ src/main/java/main/model/enums/ModerationStatus.java	(date 1587736823853)
@@ -0,0 +1,7 @@
+package main.model.enums;
+
+public enum ModerationStatus {
+  NEW,
+  ACCEPTED,
+  DECLINED
+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56__Default_Changelist_.xml	(date 1587736823861)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56__Default_Changelist_.xml	(date 1587736823861)
@@ -0,0 +1,44 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_24_04_2020_12_56_[Default_Changelist]" date="1587722232214" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 24.04.2020 12:56 [Default Changelist]" />
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/Users.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/Posts.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/Tag2Post.class" />
+    <option name="AFTER_PATH" value="target/classes/main/model/Tag2Post.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56_[Default_Changelist]/Tag2Post.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/Tags.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/GlobalSettings.class" />
+    <option name="AFTER_PATH" value="target/classes/main/model/GlobalSettings.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56_[Default_Changelist]/GlobalSettings.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/PostComments.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/model/CaptchaCodes.class" />
+    <option name="AFTER_PATH" />
+    <option name="SHELVED_PATH" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/main/DefaultController.class" />
+    <option name="AFTER_PATH" value="target/classes/main/DefaultController.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_04_2020_12_56_[Default_Changelist]/DefaultController.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: src/main/java/main/repository/PostVotesRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/repository/PostVotesRepository.java	(date 1587736823869)
+++ src/main/java/main/repository/PostVotesRepository.java	(date 1587736823869)
@@ -0,0 +1,10 @@
+package main.repository;
+
+import main.model.PostVotes;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface PostVotesRepository extends JpaRepository<PostVotes,Integer> {
+
+}
Index: src/main/java/main/controller/DefaultController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/controller/DefaultController.java	(date 1587736823812)
+++ src/main/java/main/controller/DefaultController.java	(date 1587736823812)
@@ -0,0 +1,51 @@
+package main.controller;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.Date;
+import main.model.ModerationStatus;
+import main.model.Post;
+import main.model.User;
+import main.repository.PostRepository;
+import main.repository.UserRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+public class DefaultController {
+
+  @Autowired
+  PostRepository repository;
+
+  @Autowired
+  UserRepository userRepository;
+
+  @RequestMapping("/")
+  public String index() throws IOException {
+//    User user = new User();
+//    user.setEmail("ssssss@mail.ru");
+//    user.setIsModerator(1);
+//    user.setName("Ivan");
+//    user.setPassword("3333");
+//    user.setRegTime(new Date());
+//    userRepository.save(user);
+//
+//    Post post = new Post();
+//    post.setUser(user);
+//    post.setTime(new Date());
+//    post.setTitle("baab");
+//    post.setText("ggggg");
+//    post.setValue(5);
+//    post.setModerationStatus(ModerationStatus.NEW);
+//    repository.save(post);
+//    System.out.println(post.getUser().getEmail());
+    FileInputStream inFile = new FileInputStream(
+        "src/main/resources/templates/index.html");
+    byte[] str = new byte[inFile.available()];
+    inFile.read(str);
+    String text = new String(str);
+    return text;
+  }
+}
+
Index: src/main/java/main/model/PostVotes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/model/PostVotes.java	(date 1587736823846)
+++ src/main/java/main/model/PostVotes.java	(date 1587736823846)
@@ -0,0 +1,38 @@
+package main.model;
+
+import java.util.Date;
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Entity
+@Table(name = "post_votes")
+@Data
+@NoArgsConstructor
+public class PostVotes {
+
+  @Id
+  @GeneratedValue(strategy = GenerationType.IDENTITY)
+  @Column(name = "id", nullable = false, updatable = false)
+  private int id;
+
+  @ManyToOne(cascade = CascadeType.ALL)
+  private User user;
+
+  @ManyToOne(cascade = CascadeType.ALL)
+  private Post post;
+
+  @Column(nullable = false)
+  private Date time;
+
+  @Column(nullable = false)
+  private int value;
+
+}
Index: src/main/java/main/ApiAuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.main;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\npublic class ApiAuthController {\r\n\r\n}\r\n
===================================================================
--- src/main/java/main/ApiAuthController.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/controller/ApiAuthController.java	(date 1587736823820)
@@ -1,4 +1,4 @@
-package main.java.main;
+package main.controller;
 
 import org.springframework.web.bind.annotation.RestController;
 
Index: src/main/java/main/model/GlobalSettings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.model;\r\n\r\npublic class GlobalSettings {\r\n  private int id;\r\n\r\n  private String code;\r\n\r\n  private String name;\r\n\r\n  private String value;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/model/GlobalSettings.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/model/GlobalSettings.java	(date 1587736834263)
@@ -1,11 +1,31 @@
 package main.model;
 
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Entity
+@Table(name = "global_settings")
+@Data
+@NoArgsConstructor
 public class GlobalSettings {
+
+  @Id
+  @GeneratedValue(strategy = GenerationType.IDENTITY)
+  @Column(name = "id", nullable = false, updatable = false)
   private int id;
 
+  @Column(nullable = false)
   private String code;
 
+  @Column(nullable = false)
   private String name;
 
+  @Column(nullable = false)
   private String value;
 }
Index: src/main/java/main/ApiGeneralController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.main;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\npublic class ApiGeneralController {\r\n\r\n}\r\n
===================================================================
--- src/main/java/main/ApiGeneralController.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/controller/ApiGeneralController.java	(date 1587736823781)
@@ -1,4 +1,4 @@
-package main.java.main;
+package main.controller;
 
 import org.springframework.web.bind.annotation.RestController;
 
Index: src/main/java/main/model/Tag2Post.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.model;\r\n\r\npublic class Tag2Post {\r\n  private int id;\r\n\r\n  private int postId;\r\n\r\n  private int tagId;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main/model/Tag2Post.java	(revision 297a763f594911f8732ca74f2b8756cf227d79d4)
+++ src/main/java/main/model/Tag2Post.java	(date 1587736843043)
@@ -1,9 +1,28 @@
 package main.model;
 
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+import javax.persistence.Table;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Entity
+@Table(name = "tag2post")
+@Data
+@NoArgsConstructor
 public class Tag2Post {
+
+  @Id
+  @GeneratedValue(strategy = GenerationType.IDENTITY)
+  @Column(name = "id", nullable = false, updatable = false)
   private int id;
 
+  @Column(name = "post_id", nullable = false)
   private int postId;
 
+  @Column(name = "tag_id", nullable = false)
   private int tagId;
 }
